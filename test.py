import py_db_config

config = py_db_config.PY_DB_Config("demo_config.db")

config.set("Port", "22")
config.set("AddressFamily", "any")
config.set("HostKey", "/etc/ssh/ssh_host_rsa_key")
config.set("RekeyLimit", "default none")
config.set("SyslogFacility", "AUTH")
config.set("LogLevel", "INFO")
config.set("LoginGraceTime", "2m")
config.set("PermitRootLogin", "prohibit-password")
config.set("StrictModes", "yes")
config.set("MaxAuthTries", "6")
config.set("MaxSessions", "10")
config.set("PubkeyAuthentication", "yes")
config.set("AuthorizedKeysFile", ".ssh/authorized_keys .ssh/authorized_keys2")
config.set("AuthorizedPrincipalsFile", "none")
config.set("AuthorizedKeysCommand", "none")
config.set("AuthorizedKeysCommandUser", "nobody")
config.set("HostbasedAuthentication", "no")
config.set("IgnoreUserKnownHosts", "no")
config.set("IgnoreRhosts", "yes")
config.set("PasswordAuthentication", "yes")
config.set("PermitEmptyPasswords", "no")
config.set("KbdInteractiveAuthentication", "no")
config.set("KerberosAuthentication", "no")
config.set("KerberosOrLocalPasswd", "yes")
config.set("KerberosTicketCleanup", "yes")
config.set("KerberosGetAFSToken", "no")
config.set("GSSAPIAuthentication", "no")
config.set("GSSAPICleanupCredentials", "yes")
config.set("GSSAPIStrictAcceptorCheck", "yes")
config.set("AllowAgentForwarding", "yes")
config.set("AllowTcpForwarding", "yes")
config.set("GatewayPorts", "no")
config.set("X11Forwarding", "yes")
config.set("PrintMotd", "no")
config.set("PrintLastLog", "yes")
config.set("TCPKeepAlive", "yes")
config.set("PermitUserEnvironment", "no")
config.set("Compression", "delayed")
config.set("ClientAliveInterval", "0")
config.set("ClientAliveCountMax", "3")
config.set("UseDNS", "no")
config.set("PidFile", "/run/sshd.pid")
config.set("MaxStartups", "10:30:100")
config.set("PermitTunnel", "no")
config.set("ChrootDirectory", "none")
config.set("VersionAddendum", "none")
config.set("Banner", "none")
config.set("AcceptEnv", "LANG LC_*")
config.set("Subsystem", "sftp	/usr/lib/openssh/sftp-server")
config.set("Match User", "anoncvs")

print(config.get("Port"))
print(config.exists("PermitRootLogin"))
print(config.exists("PermitRootLogin1"))
print(config.get("PermitRootLogin1"))
print(config.get("PermitRootLogin"))